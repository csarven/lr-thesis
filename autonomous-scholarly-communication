<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta charset="utf-8" />
    <title>Autonomous Scholarly Communication</title>
    <meta content="width=device-width, initial-scale=1" name="viewport" />
    <link href="media/css/basic.css" media="all" rel="stylesheet" title="Basic" />
    <link href="media/css/thesis.css" media="all" rel="stylesheet alternate" title="Thesis" />
    <link href="media/css/lncs.css" media="all" rel="stylesheet alternate" title="LNCS" />
    <link href="media/css/acm.css" media="all" rel="stylesheet alternate" title="ACM" />
    <link href="media/css/do.css" media="all" rel="stylesheet" />
    <link href="media/css/font-awesome.min.css" media="all" rel="stylesheet" />
    <script src="scripts/simplerdf.js"></script>
    <script src="scripts/medium-editor.min.js"></script>
    <script src="scripts/do.js"></script>
  </head>

  <body about="" prefix="rdf: http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs: http://www.w3.org/2000/01/rdf-schema# owl: http://www.w3.org/2002/07/owl# xsd: http://www.w3.org/2001/XMLSchema# dcterms: http://purl.org/dc/terms/ dctypes: http://purl.org/dc/dcmitype/ foaf: http://xmlns.com/foaf/0.1/ pimspace: http://www.w3.org/ns/pim/space# cc: https://creativecommons.org/ns# skos: http://www.w3.org/2004/02/skos/core# prov: http://www.w3.org/ns/prov# mem: http://mementoweb.org/ns# qb: http://purl.org/linked-data/cube# schema: http://schema.org/ void: http://rdfs.org/ns/void# rsa: http://www.w3.org/ns/auth/rsa# cert: http://www.w3.org/ns/auth/cert# wgs: http://www.w3.org/2003/01/geo/wgs84_pos# bibo: http://purl.org/ontology/bibo/ sioc: http://rdfs.org/sioc/ns# doap: http://usefulinc.com/ns/doap# dbr: http://dbpedia.org/resource/ dbp: http://dbpedia.org/property/ sio: http://semanticscience.org/resource/ opmw: http://www.opmw.org/ontology/ deo: http://purl.org/spar/deo/ doco: http://purl.org/spar/doco/ cito: http://purl.org/spar/cito/ fabio: http://purl.org/spar/fabio/ oa: http://www.w3.org/ns/oa# as: https://www.w3.org/ns/activitystreams# ldp: http://www.w3.org/ns/ldp# solid: http://www.w3.org/ns/solid/terms# acl: http://www.w3.org/ns/auth/acl# dio: https://w3id.org/dio# rel: https://www.w3.org/ns/iana/link-relations/relation#" typeof="schema:CreativeWork sioc:Post prov:Entity">
    <main>
      <article about="" typeof="schema:Article">
        <h1 property="schema:name">Autonomous Scholarly Communication</h1>

        <div id="authors">
          <dl id="author-name">
            <dt>Authors</dt>
            <dd id="Sarven-Capadisli" inlist="" rel="bibo:authorList" resource="http://csarven.ca/#i"><span about="" rel="schema:creator schema:publisher schema:author"><a about="http://csarven.ca/#i" href="http://csarven.ca/" property="schema:name" rel="schema:url" typeof="schema:Person"><span about="http://csarven.ca/#i"><span property="schema:givenName">Sarven</span> <span property="schema:familyName">Capadisli</span></span></a></span><sup>âœŠ</sup></dd>
          </dl>
        </div>

        <dl id="document-identifier">
          <dt>Identifier</dt>
          <dd><a href="https://linkedresearch.org/inbox/csarven.ca/autonomous-scholarly-communication" rel="owl:sameAs">https://linkedresearch.org/inbox/csarven.ca/autonomous-scholarly-communication</a></dd>
        </dl>

        <dl id="document-created">
          <dt>Created</dt>
          <dd><time content="2017-07-02T18:41:10Z" datatype="xsd:dateTime" datetime="2017-07-02T18:41:10Z" property="schema:dateCreated">2017-07-02</time></dd>
        </dl>

        <dl id="document-modified">
          <dt>Modified</dt>
          <dd><time content="2018-08-23T19:42:20.122Z" datatype="xsd:dateTime" datetime="2018-08-23T19:42:20.122Z" property="schema:dateModified">2018-08-23</time></dd>
        </dl>

        <dl id="document-inbox">
          <dt>Notifications Inbox</dt>
          <dd><a href="https://linkedresearch.org/inbox/csarven.ca/bdc19f9e-1e06-45ef-b714-e42fb458f14f/" rel="ldp:inbox">https://linkedresearch.org/inbox/csarven.ca/bdc19f9e-1e06-45ef-b714-e42fb458f14f/</a></dd>
        </dl>

        <dl id="document-annotation-service">
          <dt>Annotation Service</dt>
          <dd><a href="https://linkedresearch.org/annotation/csarven.ca/bdc19f9e-1e06-45ef-b714-e42fb458f14f/" rel="oa:annotationService">https://linkedresearch.org/annotation/csarven.ca/bdc19f9e-1e06-45ef-b714-e42fb458f14f/</a></dd>
        </dl>

        <dl id="document-in-reply-to">
          <dt>In Reply To</dt>
          <dd><a href="https://linkedresearch.org/calls" rel="as:inReplyTo">Call for Linked Research</a></dd>
        </dl>

        <dl id="document-status">
          <dt>Document Status</dt>
          <dd prefix="pso: http://purl.org/spar/pso/" rel="pso:holdsStatusInTime" resource="#fa6a88d4-b4b9-4e5f-a15e-e90a7f121dc6"><span rel="pso:withStatus" resource="http://purl.org/spar/pso/draft" typeof="pso:PublicationStatus">Draft</span></dd>
        </dl>

        <dl id="document-latest-version">
          <dt>Latest Version</dt>
          <dd><a href="https://linkedresearch.org/inbox/csarven.ca/bdc19f9e-1e06-45ef-b714-e42fb458f14f" rel="mem:memento rel:latest-version">https://linkedresearch.org/inbox/csarven.ca/bdc19f9e-1e06-45ef-b714-e42fb458f14f</a></dd>
        </dl>

        <dl id="document-timemap">
          <dt>TimeMap</dt>
          <dd><a href="https://linkedresearch.org/inbox/csarven.ca/autonomous-scholarly-communication.timemap" rel="mem:timemap">https://linkedresearch.org/inbox/csarven.ca/autonomous-scholarly-communication.timemap</a></dd>
        </dl>

        <dl id="document-license">
          <dt>License</dt>
          <dd><a href="https://creativecommons.org/licenses/by/4.0/" rel="schema:license" title="Creative Commons Attribution">CC BY 4.0</a></dd>
        </dl>

        <div datatype="rdf:HTML" property="schema:description">
          <p class="todo">All section names and order needs review. Some information could be moved to other chapters.</p>

          <section id="information-society" inlist="" rel="schema:hasPart" resource="#information-society">
            <h2 property="schema:name">Information Society</h2>
            <div datatype="rdf:HTML" property="schema:description">
              <p class="notes">The point of this section was to describe a wider picture about information control in society.</p>

              <p>The term <q>information society</q> is used to loosely denote increasingly central role of information and communication technologies in social and economic activity. With the advent of the Internet and the Web, the production, distribution, and consumption of instantaneously accessible networked knowledge has further shaped social policies and practices around the world.</p>

              <p>Throughout history, the complex connections between communication technologies and society transformed control structures of civilisations. Harold Innis and Marshall McLuhan argued that electronic media, unlike any other, compressed time and space, creating a <q>global village</q> as well as facilitating the influence and potential of centralised control. While the Internet reinforces democratic (re)distribution of communicative power, and the Web is inherently decentralised (with the exception of DNS), centralisation of all forms of information exchange and various forms of censorship - state or self-imposed - is commonplace. Increasingly large-scale systems collect, organise and share data in diverse sectors. For instance, at the time of writing organisations like Google, Facebook and Elsevier, as well as a long tail of (social) media services, exert a great deal of influence on how information can be accessed, expressed and reused. This influence impacts society, affecting the cost of accessing information, the effort required to produce and distribute, and how information is spread or filtered. Information control tends to happen through system designs that are inherently centralised.</p>

              <p>The information needs of individuals, communities and societies vary on personal, local and global levels. For instance, an individual can expect to participate in exchanging knowledge and goods autonomously. Given access to the Internet and the Web, academic researchers can register their own URIs and control what they refer to, establish data storage and choose which applications to use for their social and scholarly activity. Scientific communities can make their discoveries available in the global commons; take part in reproducing and replicating others' findings; be involved in quality-control and certification processes, and interact with participants and information. Given these activities, the output for society is a democratic knowledge exchange at a global level.</p>
            </div>
          </section>

          <section id="control-yourself" inlist="" rel="schema:hasPart" resource="#control-yourself">
            <h2 property="schema:name">Control Yourself</h2>
            <div datatype="rdf:HTML" property="schema:description">
              <p class="notes">Supposed to make a case for transitioning to a more decentralised and self-controlled identifiers and data. The tech is here...</p>

              <p about="" id="problem-statement" rel="schema:hasPart"><span about="#problem-statement" property="schema:description" typeof="deo:ProblemStatement">While the Web was originally conceived as a decentralised <em>application</em> running on the Internet, on which every organisation and individual can participate, it became increasingly centralised with <a class="todo" href="https://news.netcraft.com/archives/category/web-server-survey/">less than 1% of the servers serving more than 99% of the content</a>. The domination of centralisation is essentially due to economic and state incentives, and it has shaped the technical infrastructure: it is currently much easier and more efficient to author, manage, publish, and search large amounts of similarly structured content using a centralised platform. Blogger, YouTube and Facebook, for example, are centralised authoring, publishing, and search platforms for blog posts, videos or social network content respectively.</span></p>

              <p>However, independence from centralised platforms is a necessity for ownership of published ideas, and to establish authenticity and trust. For example, Facebook has been accused of <a href="http://www.slate.com/articles/technology/technology/2016/05/yes_facebook_is_biased_now_it_should_admit_it.html">bias</a>, <a href="https://www.theguardian.com/media/2016/jul/12/how-technology-disrupted-the-truth">false information</a>, and <a href="https://www.nytimes.com/2016/09/10/technology/facebook-vietnam-war-photo-nudity.html">censorship</a>â€”but rather than blaming this on any particular platform, we identify it as an unavoidable result of centralisation. After all, there is a continued tension between unrestricted publication rights on the one hand, and a guarantee of balanced, verified information on the other. In a fully decentralised setting, each source is filterless and responsible for its own quality and reputation, while consumers are free to selectively (dis-)trust certain sources using any mechanism they desire.</p>

              <p>Decentralised authoring, publication, and annotation furthermore have the potential to impact areas in which centralised services currently determine the pace of evolution. Scientific publishing, for instance, is often bound to centralised review and dissemination processes. Instead, rigorous scientific discourse could be realised with an open, decentralised environment for the annotation of manuscripts, which has the potential to engage more people sooner. Trust then no longer stems from a finite process with limited transparency, but is rather continuously assessed by repeated independent validation. Publication thereby becomes the starting point rather than the end point of the scholarly communication process.</p>

              <p>If we want to strengthen the decentralised nature of the Web again, we need to develop technologies to simplify the decentralised authoring, management, exploration, and search of Web content.</p>

              <hr />

              <p>Given our half a millennia of experience of mass print publishing, and half a century on electronic publishing, we are in a position to situate, examine and question our assumptions as to what constitutes scholarly knowledge exchange and participation in context of the Web. For instance, the Web - a <em>read-write</em> space - inherently enables anyone to be a "publisher" where each researcher can exercise their full creativity without being subject to arbitrary constraints. Any third-party involvement is fundamentally subject to conflict with that notion. Yet, third-party involvement, typically through for-profit service providers in conjunction with academic institutions and libraries, influence the quality and availability of publicly-funded research output and exchange. The social and professional incentives for academics can be traced to the workflows exerted by external forces.</p>

              <p>If scholarly communication is predominately and increasingly driven by the Web, how can we approach the integration of scholarly processes with the inherent properties of the Web? One way to look at this is by examining history: the printing press played a major role in moving the non-literate public to learn to read and write for themselves. Given the Web, we find ourselves in a similar situation, with different modes of communication. In order to use the Web effectively - as far as taking advantage of its built-in characteristics, the research community essentially needs to better position itself to self-publish and disseminate their knowledge, as well as be more attributable and accountable in their social engagement. This kind of ongoing evolution is vital for the advancement of scholarly communication. Moving towards completely Web-centric information flows and participation requires the scholarly ecosystem to unchain itself from historic practices.</p>

              <p>This thesis postulates that knowledge creators can demonstrate that self-publishing different units of communication can be socially, technically, and financially preferable to a third-party's handling of the same information and interactions, as well as their reuse. <q>Control yourself</q> captures the idea that autonomous, decentralised participation in the scholarly ecosystem is possible and desirable. Web technologies enable universal accessibility of units of information that are human- and machine-readable, as well as the possibility to integrate social interactions with scholarly information.</p>

              <hr />

              <p> So how do we "control ourselves" on the modern, overly-centralised Web? Let us now turn our attention to the technicalities of this matter given the possibilities that the Web offers, and the feasibility of using certain Web standards and technologies to address certain kinds of challenges in scholarly communication. Due to the nature of current Web applications and services, users (including researchers) do not particularly have free choice or ability to store their documents at locations of their choosing without compromising ownership and access control, and as a result their privacy and security. At the root of this is <em>information silos</em> that are ultimately controlled by third-parties. This results in system designs that, if not altogether incapable of importing or exporting data from and to disparate systems, make it extremely difficult to do so. Interoperability between systems is challenging and open standards are rarely employed. We focus on two areas of centralisation that are at the forefront of the way scholarly communication is conducted on the Web and its ramifications on the rest of the sociotechnical system:</p>

              <ul type="lower-roman">
                <li>data</li>
                <li>applications</li>
              </ul>

              <p>While centralisation of data and applications are two distinct areas of concern, some of the challenges we face in scholarly communication make them appear as one. When we discuss challenges around access to knowledge, the location and quality of the data is often conflated with the tools or services which are required to access the data. Being required to use particular software to create, format or share research articles, to create accounts on particular services, or agree to certain terms and conditions impose a set of characteristics on research output or data itself.</p>

              <p>Data and application appear to be intertwined because the workflows that the researchers are required to use tend to be unique and proprietary and predominantly enforced by third-parties. While some of the differences in designs may be due to historical reasons they also ensure various forms of vendor lock-in on both the research outputs and the applications to generate, share and reuse them. The use of non-interoperable (or even post-facto) methods to create and exchange data on the Web leads to the fragmentation of data through silo-services, and along with it the dependency on applications having their interaction mechanisms established via out-of-band knowledge. If we strictly focus on the quality of machine-interpretability of scholarly information on the Web, the technical obstacles are evident and ample. The applications for the <span lang="la" xml:lang="la" title="Latin phrase meaning the existing state of affairs">status quo</span> need to be continuously hard-wired to know what to look for; what to do once something of interest is found; or where to go next in the discovery phase. Similarly, automating discovery of fine-grained information without human interference is still central to the limitations. Regardless of the technical imperfections, these designs are gains for businesses as they can impose their own set of requirements on their users, and control over data. The third parties which enforce centralisation of data and applications are often for-profit and may even be monopolies.</p>

              <p>We can approach an alternative to this centralisation by adopting Web-centric worfklows that are inherently interoperable by design, but most importantly by enabling the creators and the users of data and applications to be truly autonomous entities. Hence, we strive towards neutrality and democratisation of scholarly knowledge on all levels of access for humans and machines; and decentralisation and decoupling of data and applications while addressing some of the infrastructure limitations and needs in order to conduct genuine scholarly communication on the Web.</p>

<!--
<p>In this article we present the <a href="#principles">principles</a> and <a href="#architecture-and-technologies">architecture</a> for a fully distributed authoring and publishing system. We describe the dokieli implementation of this architecture as well as an overview on its current <a href="#adoption">adoption</a> before we conclude with an outlook on <a href="#conclusions">challenges and future work</a>.</p>
-->
            </div>
          </section>


          <section id="challenges" inlist="" rel="schema:hasPart" resource="#challenges">
            <h2 property="schema:name">Challenges</h2>
            <div datatype="rdf:HTML" property="schema:description">
              <p class="todo">I'm not sure what to call this section. It is a bit of a high level background / challenges / research and development areas? Should this merge with other subsections?</p>

              <p>In <cite><a data-versiondate="2018-06-24T16:34:27Z" data-versionurl="https://web.archive.org/web/20180822222954/https://hvdsomp.info/papers/Papers/2014/iPres2014_Sompel_Treloar.pdf" href="https://hvdsomp.info/papers/Papers/2014/iPres2014_Sompel_Treloar.pdf">A Perspective on Archiving the Scholarly Web</a></cite>, Van de Sompel et al characterises the ongoing evolution and transition of objects pertaining to scholarly communication. In the <q cite="https://hvdsomp.info/papers/Papers/2014/iPres2014_Sompel_Treloar.pdf">Figure 1: Scholarly Communication Evolution</q> and <q cite="https://hvdsomp.info/papers/Papers/2014/iPres2014_Sompel_Treloar.pdf">Figure 2: Communicated Object Evolution</q> is reproduced below, left hand side reflects the status in the system of journals, whereas the right hand side reflects the status in a future, emerging system where the objects are considered to be Web-centric:</p>

<figure about="#scholarly-communication-evolution" id="scholarly-communication-evolution">
<pre>       Hidden |----- Research Process ----| Visible
     Discrete |----- Registration --------| Continuous
       Formal |----- Certification -------| Informal
      Delayed |----- Awareness -----------| Instant
Medium-driven |----- Archiving -----------| Content-driven</pre>
<figcaption>Reproduction of the <q>Scholarly Communication Evolution</q> figure 1 from <cite><a property="prov:wasDerivedFrom" href="https://hvdsomp.info/papers/Papers/2014/iPres2014_Sompel_Treloar.pdf">A Perspective on Archiving the Scholarly Web</a></cite> (<a href="https://creativecommons.org/licenses/by/3.0/">CC BY 3.0</a>)</figcaption>
</figure>

<figure about="#communicated-object-evolution" id="communicated-object-evolution">
<pre>     Fixed |----- Fixity -----------| Varying
    Atomic |----- Composition ------| Compound
   Uniform |----- Variety ----------| Diverse
Standalone |----- Connectedness ----| Networked
    Closed |----- Access -----------| Open</pre>
<figcaption>Reproduction of the <q>Communicated Object Evolution</q> figure 2 from <cite><a property="prov:wasDerivedFrom" href="https://hvdsomp.info/papers/Papers/2014/iPres2014_Sompel_Treloar.pdf">A Perspective on Archiving the Scholarly Web</a></cite> (<a href="https://creativecommons.org/licenses/by/3.0/">CC BY 3.0</a>)</figcaption>
</figure>

              <p>Given that the research processing becoming more visible on the Web (eg. as per the <q>Open Science</q> movement), as well as the nature of objects transitioning to being more content-driven, Van de Sompel posits that the aforementioned indicators impact the functions in scientific communication, and in particular have a significant impact on the future of archiving:</p>

              <ul>
                <li>registration: a wide variety and versions of objects that are compound, dynamic, interrelated, and interdependent are available from different Web platforms;</li>
                <li>certification: a variety of mechanisms that are decoupled from registration;</li>
                <li>awareness: a variety of objects being communicated in real-time and social;</li>
                <li>archiving: <q>no constraints on the number or kinds of parties that can hold archived copies</q>, the need for <q>appropriate levels of cross-archive interoperability in order to support seamless, uniform access to archived objects</q>, that are temporally appropriate while context being preserved</li>
              </ul>

              <p>Van de Sompel et al conclude that in order to address the needs of a distributed archival approach for scholarly Web objects, using standards towards interoperability will play a central role.</p>

              <hr />

              <p id="distributed-semantic-social-networks">In <cite><a href="http://svn.aksw.org/papers/2011/SWJ_DSSN/public.pdf">An Architecture of a Distributed Semantic Social Network</a></cite>, 2012, and <cite><a href="http://ul.qucosa.de/api/qucosa%3A12983/attachment/ATT-0/">Distributed Semantic Social Networks: Architecture, Protocols and Applications</a></cite>, 2014, Sebastian Tramp posits that the landscape of Social Web is increasingly losing its distributed nature. Tramp highlights that there is an increased use of centralised social platforms, where users are locked in to their respective platforms with not much opportunity to communicate easily with users on other platforms, as well as difficulty to relocate their social graphs and personal data. Interoperability between platforms being largely limited to proprietary APIs, and changes being at the discretion of the service provider. Users of the online services are being required to keep their - often overlapping - data individually at each platform up to date in order to minimise divergent information. Tramp argues that technical solutions should empower users to regain control and ownership over their data and its use, ensure privacy policies and rules that's user-centric (as opposed to driven by commercial interest), increased data security, information extensibility based on user's needs, reliability through distribution, and freedom of communication without centralised control. The output of Tramp's research is that Semantic Web technologies can be deployed to some extant to support the structure, maintenance, and usage of federated and distributed social networking on the Web. The evaluation is based on integration use case tests, eg. <cite><a href="https://www.w3.org/2005/Incubator/federatedsocialweb/wiki/SWAT0">SWAT0</a></cite>, <cite><a href="https://www.w3.org/2005/Incubator/federatedsocialweb/wiki/SWAT1_use_cases">SWAT1</a></cite>, formulated by the W3C <cite><a href="https://www.w3.org/2005/Incubator/federatedsocialweb/">Federated Social Web Incubator Group</a></cite>.</p>

              <p id="data-ownership-and-interoperability-for-a-decentralized-social-semantic-web">In <cite><a href="https://tel.archives-ouvertes.fr/tel-00917965/document">Data ownership and interoperability for a decentralized social semantic web</a></cite>, 2013, Andrei Vlad Sambra acknowledges the same core challenges of the modern Web as Tramp, and sets out to identify key components that would help achieve true data ownership and interoperability. Sambra demonstrates how a stack of interoperable Web technologies around WebID and Linked Data can be used to build certain class of social Web applications, where users without centralised intermediaries can authenticate themselves, and participate in creating and exchanging data with servers that are equipped with social access controls.</p>

              <p>Both Tramp and Sambra emphasise on using and extending the Web architecture and applying its principles towards a more decentralised notion of information reuse and user interaction. The core approaches use the Linked Data technology stack for publishing, retrieval, and integration; decoupling services and applications from the users data so that content creators are owners and have desired rights on their data and its use; and fostering data extensibility and distribution, as well as privacy.</p>

              <hr />

<!--
               <p>In <cite><a href="https://f1000research.com/articles/6-588/v2">What is open peer review? A systematic review</a></cite>, Ross-Hellauer summarises criticisms of traditional peer review: <q>unreliability and inconsistency, delay and expense, lack of accountability and risks of subversion, social and publication biases, lack of incentives, wastefulness</q></p>

              <p>To distinguish fakescience/predatory from legit/non-predatory Beyond "anyone can say anything about anything" eg. publish study preregistration to establish trust, share provenance, data, software/code.., open peer review (OPR) process (when/who/what), competing/conflict of interest, grant information</p>
-->

              <p>While there are plethora of <cite>architecturally significant requirements</cite> that would be necessary to design a system that is sociotechnical in nature, meanwhile encouraging autonomous and interoperable participation on the open Web, we focus on non-functional and functional requirements in this thesis.</p>

              <p><strong>Non-Functional Requirements</strong>: given above initiatives and developments, we derive non-functional requirements for systems to aim at addressing the forces and functions in scientific communication through the following:</p>

              <ul>
                <li><em>Interoperability</em> to improve discovery, accessibility, integrability, and reusability</li>
                <li><em>Security and privacy</em></li>
                <li><em>Modularity and extensibility</em></li>
                <li><em>Data integrity, transparency, and reliability</em></li>
                <li>..</li>
              </ul>
            </div>
          </section>


          <section id="standards-for-decentralised-web" inlist="" rel="schema:hasPart" resource="#standards-for-decentralised-web">
            <h2 property="schema:name">Standards for Decentralised Web</h2>
            <div datatype="rdf:HTML" property="schema:description">
              <p class="todo">Write a few sentences for each standard how/why it helps scholarly communication.</p>

              <p id="internet-web-protocols">The foundational communication and transfer protocols of the Internet and the Web (eg. <abbr title="Transmission Control Protocol">TCP</abbr>/<abbr title="Internet Protocol">IP</abbr>, <abbr title="Domain Name Server">DNS</abbr>, <abbr title="Hypertext Transfer Protocol">HTTP</abbr>) are designed to operate in a decentralised and distributed manner. In terms of global functionality, removing a single node from the network - a machine with an IP address - does not halt the whole network. Similarly, when an HTTP URL is no longer available (eg. typical "404 Not Found", "410 Gone" status messages), the other URLs are not affected. This particular behaviour, where the Web being functional without requiring bi-directional hyperlinks is considered to be a "feature" (rather than a "bug") of the overall system. However, Ted Nelson disputes this design choice with respect to the original Hypertext design.</p>

              <p id="read-write-web">As discussed previously the <abbr title="Architecture of the World Wide Web">AWWW</abbr> enables the identification, discovery and description of information for the notion of a <q>Read-Write Web</q> where servers and clients interact using Web standards. Generally speaking <cite><a href="https://en.wikipedia.org/wiki/Create,_read,_update_and_delete">create, read, update and delete</a></cite> (<abbr title="Create, Read, Update and Delete">CRUD</abbr>) are the basic functions of persistent storage as well as conventions for user-interfaces to view and change information. Each CRUD operation can be mapped to an interaction method of the Web architecture. For example, the request function for HTTP would be: <math alttext="upper R e q u e s t equals upper M e t h o d vector-or-cross-product upper I upper R upper I vector-or-cross-product upper M e d i a upper T y p e vector-or-cross-product upper B o d y" xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mi>Request</mi><mo>=</mo><mi>Method</mi><mo>â¨¯</mo><mi>IRI</mi><mo>â¨¯</mo><mi>MediaType</mi><mo>â¨¯</mo><mi>Body</mi></mrow></math>, where <em>IRI</em> being the identifier of a resource, and <em>MediaType</em> indicating the format of the content in <em>Body</em>, the mapping to some HTTP method(s) <em>typically</em> used as follows (implementations may differ in some areas):</p>

              <ul>
                <li><em>create</em>: <code>PATCH</code>, <code>POST</code>, <code>PUT</code>;</li>
                <li><em>read</em> (retrieve): <code>GET</code>. <code>HEAD</code>, <code>OPTIONS</code>;</li>
                <li><em>update</em> (modify): <code>PATCH</code>, <code>POST</code>, <code>PUT</code>;</li>
                <li><em>delete</em> (destroy): <code>DELETE</code>, <code>PATCH</code>.</li>
              </ul>

              <p id="socially-aware-read-write-linked-data">In <cite><a href="https://www.w3.org/DesignIssues/CloudStorage">Socially Aware Cloud Storage</a></cite> and <cite><a href="https://www.w3.org/DesignIssues/ReadWriteLinkedData">Read-Write Linked Data</a></cite>, Berners-Lee discusses where the Web architecture together with existing or future communication protocols and data standards can be used to materialise a <q>socially-aware decentralized access control of reading and of writing to linked data, and of notification of changes.</q> The overarching goal is to enable people and software to co-create information, and as well as to interact with information using social applications. This is all meanwhile technically and legally enabling participants to retain their autonomy, identity and storage, access and rights over their contributions. In order to achieve this, one of the goals is to make and an infrastructure where data and applications are decoupled by design. That is, an ability to work with linked data without constraints on which applications can be used, as long as they follow consensus based open protocols and data models. At the core of this initiative is where users, groups, and applications use global identifiers (URIs), and  access control is applied using policies assigned to those identifiers. This also leads to the commodification of read-write data storage; the storage location on the Web can be decided by its owners and contributors, and it remains independent from the applications interacting with it.</p>

              <hr />

              <p>The following are a selection of open Web specifications; standards and practices that are designed with the notion of decentralisation, interoperability, and extensibility. The are based on use cases that facilitate discovery, read-write operations of interlinked Web resources. Their core functions are listed in context of the forces in scientific communication in Table [].</p>

              <p id="linked-data-platform"><cite><a href="https://www.w3.org/TR/ldp/">Linked Data Platform</a></cite> (<abbr title="Linked Data Platform">LDP</abbr>) specifies a RESTful read-write protocol and vocabulary for Web resources. LDP has distinct notions for <q>resource</q> and <q>container</q>; where the container construct can group and manage resources. LDP uses the RDF data model to describe the state of RDF and non-RDF resources. <cite><a href="https://www.w3.org/TR/ldp-ucr/">Linked Data Platform Use Cases and Requirements</a></cite> outlines a wide-range of user stories, use cases, scenarios, and requirements which was used as the bases for the LDP specification. LDP can be used to mimic a file system abstraction interacting with Web resources over HTTP. The <cite><a href="https://www.w3.org/TR/ldp-paging/">LDP Paging</a></cite> mechanism can be used by clients and servers to efficiently request and serve a resource description, eg. resources in a container, in multiple parts. All LDP servers and clients can interact with each other using the same HTTP interface in context of Linked Data to perform CRUD operations.</p>

              <p id="hydra-core-vocabulary"><cite><a href="http://www.hydra-cg.com/spec/latest/core/">Hydra</a></cite> is a vocabulary to enable the creation of hypermedia-driven Web APIs by enabling a server to advertise affordances of its resources - machine-readable valid state transitions - to a client. A client uses this information to construct HTTP requests in order to perform possible read-write operations. Hydra enables generic client applications to be built without hardcoding knowledge about the available operations against Web APIs.</p>

              <p id="linked-data-fragments"><cite><a href="http://linkeddatafragments.org/">Linked Data Fragments</a></cite> (<abbr title="Linked Data Fragments">LDF</abbr>) is the concept of having a uniform view on Linked Data interfaces that can be used towards reliable Web querying. To that end, a client asks a server about the kinds of Linked Data fragments that are available and then dynamically adapts its query plan for the server to execute. A Linked Data fragment is defined by three characteristics: data (what triples does it contain?), metadata (what do we know abut it?), controls (how to access more data?).</p>

              <p id="triple-pattern-fragments"><cite><a href="http://www.hydra-cg.com/spec/latest/triple-pattern-fragments/">Triple Pattern Fragments</a></cite> (<abbr title="Triple Pattern Fragments">TPF</abbr>) is one possible way for a server to define a Linked Data fragment that enable live querying over the dataset on the client-side. TPF's hypermedia controls are expressed using the Hydra vocabulary.</p>

              <p id="linked-data-templates"><cite><a href="https://atomgraph.github.io/Linked-Data-Templates/">Linked Data Templates</a></cite> (<abbr title="Linked Data Templates">LDT</abbr>) provides the means to define read-write Linked Data APIs declaratively using SPARQL and specify a uniform interaction protocol for them. An LDT based server applies re-usable RDF ontologies to define application structure declaratively as a set of instructions for resource representation processing. To this end, "templating" is where an HTTP operation is mapped to a certain URI pattern that a server executes a SPARQL command in order to drive RDF CRUD processing. When a client triggers a particular request pattern, the server gives a suitable response based on available templates that are identified with URIs.</p>

              <p id="rdf-post"><cite><a href="http://www.lsrn.org/semweb/rdfpost.html">RDF/POST Encoding for RDF</a></cite> uses the W3C HTML 4.01 Recommendation to specify read-write operations of RDF data through form-encoded RDF serialisation. Read operations are done by having an RDF/POST document encoded in HTTP GET URL, and write operations are sent via HTTP POST with form-urlencoded media type.</p>

              <p id="fedora-api"><cite><a href="https://fcrepo.github.io/fcrepo-specification/">Fedora API Specification</a></cite> refines the semantics and interaction patterns of the LDP specification in order to address the needs of repositories for durable access to digital data. Its goal is to facilitate interoperability with client applications. While the interactions patterns provides a mechanism for different client applications to communicate with servers, servers can be expected to vary in the kinds of services and affordances they offer for their resources. Fedora uses LDP as a foundation and defines the version identification and navigation scheme with respect to the Memento specification, integrates resource authorization and Web Access Control rules, provides a design for the publication of event notifications, and interaction patterns to support binary resource fixity verification.</p>

              <hr />

              <p>The design pattern for these Linked Data centric read-write architectures can be categorised as follows:</p>

              <ul>
                <li>the ability to perform CRUD interactions against Web resources</li>
                <li>decoupling software from domain or application-specific operations and data</li>
                <li>declarative and machine-readable affordances for valid read-write operations</li>
              </ul>

              <p id="memento"><cite><a href="https://tools.ietf.org/html/rfc7089">HTTP Framework for Time-Based Access to Resource States -- Memento</a></cite> (<abbr title="HTTP Framework for Time-Based Access to Resource States -- Memento">Memento</abbr>): introduces a uniform, datetime-based, version access capability that integrates present and past Web resources. As representations of resources change over time, there is a need to preserve (archive and version) earlier representations. One common resource versioning pattern on the Web consists of generic URIs referring to the latest version of an accessible resource, as well as having a dedicated version URI for each resource. The Memento framework facilitates the discovery and retrieval of distributed versioned resources with datetime negotiation, a variant of content-negotiation; and TimeMaps an index of URIs referring to the prior states of a resource. The framework also helps to recognise frozen states of resources - a promise that the resource state has not and will not change.</p>

              <p id="web-annotation"><cite><a href="https://www.w3.org/annotation/">Web Annotation</a></cite> (<abbr title="Web Annotation">WA</abbr>) is set of specifications for an interoperable, sharable, distributed Web Annotation architecture. The annotations convey information about a resource or associations between resources to meet different motivations and purposes, eg. assessing, replying, describing, bookmarking, as well as <q cite="https://www.w3.org/TR/annotation-model/#abstract">linking arbitrary content to a particular data point or to segments of timed multimedia resources</q>. The Recommendations and Notes include:</p>

              <p class="todo">Perhaps only annotation-protocol and maybe annotation-model should be here and the rest in structure-of-scholarly-communication?</p>
              <ul>
                <li><cite><a href="http://www.w3.org/TR/annotation-model/">Web Annotation Data Model</a></cite> describes the underlying annotation <em>abstract</em> data model as well as a JSON-LD serialization.</li>
                <li><cite><a href="http://www.w3.org/TR/annotation-vocab/">Web Annotation Vocabulary</a></cite> provides the vocabulary which underpins the annotation data model.</li>
                <li><cite><a href="http://www.w3.org/TR/annotation-protocol/">Web Annotation Protocol</a></cite> is the HTTP API for publishing, syndicating, and distributing Web Annotations. Much of the protocol is based on using and extending LDP and REST best practices.</li>
                <li><cite><a href="https://www.w3.org/TR/annotation-html/">Embedding Web Annotations in HTML</a></cite> describes and illustrates potential approaches for including annotations within HTML documents using current specifications like RDFa or JSON-LD.</li>
                <li><a href="https://www.w3.org/TR/selectors-states/">Selectors and States</a> describes the use of annotation Selectors as URI fragment identifiers relying on the formal specification and the semantics in the data model.</li>
              </ul>

              <p id="activity-streams"><cite><a href="https://www.w3.org/TR/activitystreams-core/">Activity Streams 2.0</a></cite> (<abbr title="Activity Streams 2.0">AS</abbr>) detail a model for representing potential and completed activities with the intention of using specific types of activity vocabularies defined elsewhere. The <cite><a href="https://www.w3.org/TR/activitystreams-vocabulary/">Activity Vocabulary</a></cite> provides a foundational vocabulary to describe past, present, and future activities eg. announcing, creating, following, offering, and about objects eg. actors, media.</p>

              <p id="linked-data-notifications"><cite><a href="https://www.w3.org/TR/ldn/">Linked Data Notifications</a></cite> (<abbr title="Linked Data Notifications">LDN</abbr>) is a resource-centric communication protocol for applications to generate notifications about activities, interactions, and new information, which may be presented to the user or processed further. It allows any resource (target) to advertise a receiving endpoint (inbox) for the messages anywhere on the Web. The server (receiver) hosting the inbox can have messages pushed to them by applications (sender), as well as how other applications (consumer) may retrieve those messages. Each notification in an inbox is an identifiable and reusable unit (URI), and can contain any data using any vocabulary.</p>

              <p id="activitypub"><cite><a href="https://www.w3.org/TR/activitypub/">ActivityPub</a></cite> (<abbr title="ActivityPub">AP</abbr>) is a decentralized social networking protocol based upon the Activity Streams 2.0 data format. It provides a client to server API for CRUD operations, as well as a federated server to server API for delivering notifications and content. User accounts on servers have an inbox (to receive messages from the world), and an outbox (to send messages to others). AP's inbox property is the same as LDN's, and the targeting and delivery mechanism can be interoperably combined.</p>


              <table id="specifications-for-forces-and-functions">
                <caption>Specifications to fulfil forces and functions in scientific communication</caption>
                <thead>
                  <tr>
                    <th rowspan="2">Specification</th>
                    <th colspan="4">Forces</th>
                    <th colspan="4">Functions</th>
                  </tr>
                  <tr>
                    <th>Actor</th>
                    <th>Accessibility</th>
                    <th>Content</th>
                    <th>Applicability</th>
                    <th>Registration</th>
                    <th>Awareness</th>
                    <th>Certification</th>
                    <th>Archive</th>
                  </tr>
                </thead>
                <tbody>
                  <tr><th scope="rowgroup" colspan="9">Protocol</th></tr>
                  <tr><th>Linked Data Platform</th><td></td><td>âœ”</td><td>âœ”</td><td></td><td>âœ”</td><td>âœ”</td><td></td><td></td></tr>
                  <tr><th>Linked Data Templates</th><td></td><td>âœ”</td><td>âœ”</td><td></td><td>âœ”</td><td>âœ”</td><td></td><td></td></tr>
                  <tr><th>Linked Data Fragments</th><td></td><td>âœ”</td><td>âœ”</td><td></td><td></td><td>âœ”</td><td></td><td></td></tr>
                  <tr><th>Fedora API</th><td>âœ”</td><td>âœ”</td><td>âœ”</td><td></td><td>âœ”</td><td>âœ”</td><td></td><td>âœ”</td></tr>
                  <tr><th>Memento</th><td></td><td>âœ”</td><td></td><td></td><td>âœ”</td><td>âœ”</td><td></td><td>âœ”</td></tr>
                  <tr><th>Web Annotation</th><td></td><td>âœ”</td><td>âœ”</td><td></td><td>âœ”</td><td>âœ”</td><td>âœ”</td><td></td></tr>
                  <tr><th>ActivityPub</th><td>âœ”</td><td>âœ”</td><td>âœ”</td><td></td><td>âœ”</td><td>âœ”</td><td>âœ”</td><td></td></tr>
                  <tr><th>Linked Data Notifications</th><td></td><td>âœ”</td><td>âœ”</td><td></td><td>âœ”</td><td>âœ”</td><td></td><td></td></tr>
                  <tr><th>WebID</th><td>âœ”</td><td></td><td>âœ”</td><td></td><td>âœ”</td><td></td><td></td><td></td></tr>
                  <tr><th>WebID-TLS</th><td>âœ”</td><td>âœ”</td><td>âœ”</td><td></td><td></td><td></td><td></td><td></td></tr>
                </tbody>
                <tbody>
                  <tr><th scope="rowgroup" colspan="9">Model</th></tr>
                  <tr><th>Web Access Control</th><td>âœ”</td><td>âœ”</td><td></td><td></td><td></td><td></td><td></td><td></td></tr>
                  <tr><th>Hydra Core</th><td></td><td>âœ”</td><td>âœ”</td><td></td><td></td><td>âœ”</td><td></td><td></td></tr>
                  <tr><th>Activity Streams</th><td>âœ”</td><td></td><td>âœ”</td><td>âœ”</td><td>âœ”</td><td></td><td>âœ”</td><td></td></tr>
                  <tr><th>Robust Links</th><td></td><td></td><td>âœ”</td><td></td><td></td><td>âœ”</td><td></td><td>âœ”</td></tr>
                </tbody>
                <tfoot>
                  <tr>
                    <td colspan="9">
                      <p>The suit of Web Annotation standards are grouped. Triple Pattern Fragments is grouped into Linked Data Fragments. WebID incorporates identification systems that can be used for actors (PURL, w3id, ORCID), as well as the WebID Profile that describes it.</p>
                    </td>
                  </tr>
                </tfoot>
              </table>
            </div>
          </section>


          <section id="decentralised-storage" inlist="" rel="schema:hasPart" resource="#standards-for-decentralised-web">
            <h2 property="schema:name">Decentralised Storage</h2>
            <div datatype="rdf:HTML" property="schema:description">
              <p class="fixme">Should this be a subsection of #standards-for-decentralised-web ? Kinda like it flat</p>

              <p>Some of the advantages of decentralised storage: censorship resistance, persistent availability, self-monitoring, organic growth and optimisation, monopoly disruption.</p>
              <p>Disadvantages...</p>

              <p>Personal storage space: Virtually any HTTP server, but more specifically servers with an approach for a read-write Linked Data architecture (LDP/Solid/Fedora/mayktso)</p>

              <p>Places the foremost responsibility on the "owners" of the units of communication to determine backup and replication strategies, in addition to third-party's performing the same functions.</p>


              <p>Pay as you go (linked information space), eg. own profile today, own storage space tomorrow..</p>

              <p id="a-demonstration-of-the-solid-platform-for-social-web-applications">In <cite><a data-originalurl="https://doi.org/10.1145/2872518.2890529" data-versiondate="2018-08-21T10:11:43Z" data-versionurl="https://web.archive.org/web/20180821100927/http://gdac.uqam.ca/WWW2016-Proceedings/companion/p223.pdf" href="http://gdac.uqam.ca/WWW2016-Proceedings/companion/p223.pdf">A Demonstration of the Solid Platform for Social Web Applications</a></cite>, 2016, Essam Mansour et al raise the concern that well-known Social Web applications are essentially <q>data silos</q> involving design patterns where each application is custom built to store its own data, along with custom authentication and access control mechanisms. Hence, users of such systems often cannot easily switch personal data storage services, or reuse their data with similar applications. Authors demonstrate the <cite>Solid platform</cite> to address the challenges in decentralised authentication, data management, as well as the development of interoperable and portable Social Web applications that interact with the platform. A number of servers and client applications are implemented where it is possible to store RDF and non-RDF resources, as well as permitting operations via SPARQL queries for complex data retrieval and link-following. The client-side applications cover common "day-to-day" tasks eg. contacts management, event organisation, collaborative authoring, annotating, and social notifications, all meanwhile users are able to use their WebIDs and switch between applications with similar functions.</p>
            </div>
          </section>

          <section id="universal-identity-for-the-web" inlist="" rel="schema:hasPart" resource="#universal-identity-for-the-web">
            <h2 property="schema:name">Universal Identity for the Web</h2>
            <div datatype="rdf:HTML" property="schema:description">
              <p class="fixme">Should this be a subsection of #standards-for-decentralised-web ? Kinda like it flat</p>

              <p class="todo">Identity can generally be issued by a community, institution, state issued....</p>

              <p id="social-personal-data-stores">In <cite><a href="https://www.research.ed.ac.uk/portal/files/20028374/vanKleek_et_al_2015_Social_Personal_Data_Stores.pdf" title="https://doi.org/10.1145/2740908.2743975">Social Personal Data Stores: the Nuclei of Decentralised Social Machines</a></cite>, 2015, Max Van Kleek et al, considers decentralised social applications from the user's perspective based on the shortcomings and dangers of <span lang="la" title="Latin phrase refering to what happens in practice, in contast to law" xml:lang="la">de facto</span> practices where user data and interactions being controlled by centralised service providers. The work states that existing personal data stores for the most part do not <q>account for the need for multiple identities, effective separation of roles and anonymity, and to prevent unwanted tracking and clickstream profiling</q>, and that future work should integrate people's need for privacy, creation, management, and switching of separate identities, pseudonyms, personas in order to be used in different contexts, eg. personal, professional.</p>

              <p>In <cite><a href="http://dr.amy.gy/">The Presentation of Self on a Decentralised Web</a></cite>, 2017, Amy Guy, the <q cite="https://rhiaro.github.io/thesis/chapter3#what-is-a-profile">What is a profile?</q> study describes <q>affordances of systems which integrate online profiles in a social capacity and raises five features of systems with regards to their representations of users: flexibility, access control, prominence, portability, representation.</q> Furthermore, Guy posits that <q cite="https://rhiaro.github.io/thesis/chapter3#ccccc">online self-presentation is both constituted and affected by <em>who</em> sees a representation of an individual, and <em>what</em> it is they see, both of which are encompassed by the situation <em>whereby</em> it is seen</q>. The results of the studies are summarised as a conceptual framework as the <q>5Cs</q> for online profiles and self presentation: <q>context, control, customisability, connectivity, cascade</q>.</p>

              <p id="third-party-controlled">Community or state controlled identifiers are a class of identifiers that are ultimately third-party controlled in that their ownership, governance, description is beyond the individuals jurisdiction. For some use cases, this can be desirable in that the persistence and maintenance of the identifiers are handled by the group as a whole. Typically there are policies in place with a promise to keep them around ...</p>
              <p>ORCID aims to be part of the commons and managed by its <a href="https://orcid.org/about/community">community</a>. Ultimately third-party controlled - outside of the researcher's jurisdiction, constrained expression.. There is sameAs for WebID and possibly preferredURI: https://github.com/ORCID/ORCID-Source/issues/4398 ...</p>
              <p>ORCID: while having an ORCID, a person can have their storage, inbox ( https://twitter.com/csarven/status/905421364353490944 ), outbox ( https://twitter.com/csarven/status/991642357983514625 ) elsewhere ...</p>
              <p>Self-controlled:</p>
              <p>..</p>

              <figure>
                <pre>                       |------ URI ownership ------|
Contributor controlled |------ Data----------------| Third-party controlled
                       |------ Application --------|</pre>
                <figcaption>Range of control</figcaption>
              </figure>

              <p class="todo">How do I jump to:</p>
              <p>Desired qualities: global identifier, extensible descriptions, self-expression (contrast with silo/accounts and trusted third-party managed identification systems, multiple identities (personal, professional), identity claim verification, social graph</p>

              <p>Different types of strings, eg. a username, an email address, an RSA public key, a URI, can be used to directly or indirectly identify agents. While each can be useful within their own context, Web-based identifiers (URI) make it possible to provide machine-readable descriptions when dereferenced, descriptions being extensible by their owners, as well as being interoperable global identifiers that can be interlinked unambiguously with other things.</p>

              <p id="future-of-social-networking">The <cite><a href="https://www.w3.org/2008/09/msnws/report.html">W3C Workshop on the Future of Social Networking Report</a></cite>, 2009, concluded that distributed social networking is a possibility on the Web, given available data interoperability technologies, as well as further support of open source implementation of decentralised architectures. At the crux of the initiatives was to: foster preservation of privacy best practices for users; and their ability to trust claims; deepening user contexts and roles in social networking; enabling protocols for exchanging goods and services within communities, and; creating adapted user experienced with improved accessibility and mobility by closing the gap between implementations of social networks and device capabilities.</p>

              <p id="foaf+ssl">One of the conclusions of the workshop was that many of the existing technologies needed to create decentralized social networks already existed, eg. FOAF, OpenID, XMPP. <a href="https://www.w3.org/2008/09/msnws/papers/foaf+ssl.html" title="FOAF &amp; SSL: creating a global decentralised authentication protocol">One of contributions to the workshop</a> was presented by Henry Story et al based on <a href="https://web.archive.org/web/20080426014047/http://blogs.sun.com:80/bblfish/entry/foaf_ssl_creating_a_global is">original proposal</a> (combining <cite><a href="https://web.archive.org/web/20080426142811/http://blogs.sun.com:80/bblfish/entry/rdfauth_sketch_of_a_buzzword">RDFAuth</a></cite> by Henry Story and <cite><a href="https://lists.w3.org/Archives/Public/semantic-web/2008Mar/0207.html">sketch of a simple authentication protocol</a></cite> by Toby Inkster in 2008) for the notion of using Semantic Web vocabularies such as <abbr title="Friend of a Friend">FOAF</abbr> with SSL certificate exchange mechanism permits distributed and interlinked social networks to exist. The protocol was later posited in <cite><a href="http://dig.csail.mit.edu/2009/Papers/SPOT/foaf-ssl-spot2009.pdf">FOAF+SSL: RESTful Authentication for the Social Web</a></cite>. Its goal was set to protecting and controlling access to personal information distributed on the Web where identification and privacy is at its centre. The work on WebID and related extensions described below builds on this work.</p>

              <p id="webid-specs">In order to enable people, group and software to act as autonomous agents that can cooperate on the Web, we need methods for distributed and decentralised identity, secure authentication, and access control. <cite><a href="https://www.w3.org/2005/Incubator/webid/spec/">WebID</a></cite> is a group of specifications that outlines approaches meet those needs.</p>

              <p id="webid"><cite class="highlight-webid"><a href="https://www.w3.org/2005/Incubator/webid/spec/identity">Web Identity and Discovery</a></cite> (<abbr title="Web Identity and Discovery">WebID</abbr>) is a specification that outlines a distributed and extensible universal identification mechanism on the Web. A WebID is an HTTP URI denoting an agent, for example a person, organisation, or software. It can be used towards the declaration of an agent's existence; discovery, describing or reference; authentication; and authorisation. WebID is distributed and decentralised in that any agent can be <em>named</em> anywhere on the Web, and the server hosting the URI space controls the identity. It is extensible in that it can be used injunction with secure authentication and access control mechanism, as well as having dereferenceable machine-readable descriptions which are themselves extensible. WebID can improve privacy, security, and control be in the hands of users.</p>

              <p id="webid-profile"><cite class="highlight-webid-profile"><a href="https://www.w3.org/2005/Incubator/webid/spec/identity/#dfn-webid_profile">WebID Profile</a></cite> is an RDF document which uniquely describes agents denoted by a WebID.</p>

              <p>The <cite>WebID</cite>: <samp class="highlight-webid">http://csarven.ca/#i</samp> refers to me (in real life) via the description found at the location of the <cite>WebID Profile</cite> document: <a class="highlight-webid-profile" href="http://csarven.ca/">http://csarven.ca/</a>:</p>

              <figure class="listing" id="webid-profile-example">
                <p><a class="highlight-webid" href="http://csarven.ca/#i" title="WebID"><span class="highlight-webid-profile" title="WebID Profile">http://csarven.ca/</span>#i</a></p>
                <style> #webid-profile-example > p { display:inline-block; } #webid-profile-example > p a { border: 3px solid #f00; padding: 0.5em; letter-spacing:3px; text-decoration: none; } #webid-profile-example > p a span { border: 3px dashed #00f; padding: 0.15em; }</style>
                <pre><code>&lt;<span class="highlight-webid-profile">http://csarven.ca/</span>&gt;</code>
<code>  a foaf:PersonalProfileDocument ;</code>
<code>  foaf:primaryTopic &lt;http://csarven.ca/#i&gt; .</code>
<code></code>
<code>&lt;<span class="highlight-webid">http://csarven.ca/#i</span>&gt;</code>
<code>  a foaf:Person ;</code>
<code>  foaf:name "Sarven Capadisli"@en ;</code>
<code>  foaf:mbox &lt;mailto:info@csarven.ca&gt; ;</code>
<code>  foaf:img &lt;http://csarven.ca/media/images/sarven-capadisli.jpg&gt; ;</code>
<code>  foaf:interest &lt;https://en.wikipedia.org/wiki/Media_theory&gt; ;</code>
<code>  cert:key &lt;http://csarven.ca/#cert&gt; ;</code>
<code>  foaf:account &lt;irc://irc.freenode.net/csarven,isnick&gt; ;</code>
<code>  foaf:knows &lt;https://www.w3.org/People/Berners-Lee/card#i&gt; ;</code>
<code>  pim:storage &lt;http://csarven.ca/&gt; ;</code>
<code>  ldp:inbox &lt;http://csarven.ca/inbox/&gt; ;</code>
<code>  as:outbox &lt;http://csarven.ca/outbox/&gt; ;</code>
<code>  foaf:made &lt;https://dokie.li/&gt; ;</code>
<code>  rdfs:seeAlso &lt;http://csarven.ca/cv&gt; .</code></pre>
                <figcaption>An WebID Profile describing a WebID.</figcaption>
              </figure>

              <p>While my personal WebID - under my control - is at <a href="http://csarven.ca/#i">http://csarven.ca/#i</a>, I have an ORCID identifier - controlled by the community - that also serves as a WebID: <a href="https://orcid.org/0000-0002-0880-9125">https://orcid.org/0000-0002-0880-9125</a>, which also has an RDF representation. As ORCID's user interface allows people to extend their descriptions with certain fields, it is possible to add <em>same as</em> or <em>preferred URI</em> relations:</p>

              <figure class="listing">
                <pre><code>&lt;https://orcid.org/0000-0002-0880-9125&gt; ;</code>
<code>  owl:sameAs &lt;http://csarven.ca/#i&gt; ;</code>
<code>  contact:preferredURI "http://csarven.ca/#i" .</code></pre>
                <figcaption>WebID with same as and preferred URI relations.</figcaption>
              </figure>

              <p>The <code>owl:sameAs</code> and <code>contact:preferredURI</code> information provides an opportunity for applications consuming the ORCID WebID to potentially discover more information about entity (me). This is particularly useful as the ORCID WebID Profile is not completely open to add arbitrary information, but only a constrained set of information. For example, specifying a person's picture or their contacts is not currently possible with ORCID, however, if the alternative profiles (http://csarven.ca/#i) contain such information, they can be purposed to know more about the entity.</p>
            </div>
          </section>

          <section id="authentication" inlist="" rel="schema:hasPart" resource="#authentication">
            <h2 property="schema:name">Authentication</h2>
            <div datatype="rdf:HTML" property="schema:description">
              <p class="fixme">Should this be a subsection of #standards-for-decentralised-web ? Kinda like it flat</p>

              <p id="trust">Trust is ultimately tied to verifiable claims about identity and their provenance. While the creation and protection of third-party controlled online identities have received much focus, claiming and using personal identities online is still a challenge. Today's Web applications predominantly make use of online identities that are essentially tied to and controlled by authorities in which users are merely borrowing an identifier and its management. It is a common practice to where users are required to create accounts at each online service they wish to use, eg. social media sites. Moreover, the trust model of such design dictates claims and usage of online identities is not ultimately in the hands of the users, and can be taken away from the users by the owners of the URIs and service at any time and reason. Even in cases where third-party issues identities can be used across different services, it is subject to a privacy violation as the identity provider essentially gets to know which services the user's online identity is used with and for what purpose. Consequently such services can gradually build up information about users' actions as well as behavioural patterns on the Web. Lastly, portability and interoperability of the identities is generally under developed as there is no particular incentive for an identity provider to make it so - after all, providing "free" services for online identities, and then locking identities to well-defined circle of services is taken advantage of by large corporations given their business models. Perhaps most importantly, such online services (as well as applications) do not recognise the identity of users as a distinct notion from the applications and services they use towards authentication.</p>

              <p id="authentication-mechanisms">While there are different authentication mechanisms eg. <cite><a href="https://tools.ietf.org/html/rfc7617">The 'Basic' HTTP Authentication Scheme</a></cite>, service based authentication of centralised systems typically requiring a username and password, as well as being a typical re , <cite><a href="https://openid.net/connect/">OpenID Connect</a></cite> (<abbr title="OpenID Connect">OIDC</abbr>), <cite><a href="https://www.w3.org/TR/webauthn/">Web Authentication: An API for accessing Public Key credentials</a></cite>, in this thesis we will focus on digital certificates used by <a href="#tls">TLS</a>, ie. <a href="#x509">X.509 Certificate</a>.</p>

              <p id="web-of-trust"><cite><a href="https://en.wikipedia.org/wiki/Web_of_trust">Web of Trust</a></cite> (<abbr title="Web of Trust">WoT</abbr>) is a concept for a decentralised trust model used in systems like <cite><a href="https://en.wikipedia.org/wiki/Pretty_Good_Privacy"><abbr title="Pretty Good Privacy">PGP</abbr></a></cite> to establish the authenticity of the binding between a public key and its owner. A public key cryptographic system uses a pair of keys: public keys (disseminated openly) and private keys (withheld by the owner). It has two main functions: authentication and encryption. For authentication, public key verifies that a holder of the paired private key sent the message. In the case of encryption, for example, when Guinan wants to send Picard a message, Guinan takes Picard's public key to encrypt a message where only Picard can decrypt the message with his private key. WoT essentially leaves trust decisions to the users, as opposed to a centralised authority. Thus, WoT uses self-signed certificates and third-party attestation of those certificates, eg. at <a href="https://en.wikipedia.org/wiki/Key_signing_party">key signing parties</a>. Self-signing certificates removes the dependency on hierarchical certificate authorities to assert identity.</p>

              <p id="x509"><cite><a href="http://www.itu.int/rec/T-REC-X.509/en">X.509</a></cite> is a standard for public key certificates that specifies a structure for a digital certificate, including a public key associated with one or more identities, as well as extensions for new information. X.509 essentially serves as a identity card that can be used to store identity claims. X.509 certificates are used to authenticate servers and clients. Both TLS/SSL and <cite><a href="">HTTP Secure</a></cite> (<abbr title="HTTP Secure">HTTPS</abbr>) - an extension of HTTP for secure communication - use the <cite><a href="https://tools.ietf.org/html/rfc5280">Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</a></cite>.</p>

              <p id="tls"><cite><a href="https://tools.ietf.org/html/rfc5246">The Transport Layer Security Protocol Version 1.2</a></cite> (<abbr title="Transport Layer Security">TLS</abbr>) is a cryptographic protocol aimed at providing secure connections between applications. When applications eg. a server and a client (Web browser), communicate using the TLS protocol, it is private (secure) in that data is encrypted, identity of either party can be authenticated using public key cryptography (like PGP), and integrity of the exchanged data can be assured during transit.</p>

              <p id="webid-tls"><cite><a href="https://www.w3.org/2005/Incubator/webid/spec/tls">WebID-TLS</a></cite> defines how a server can authenticate a user with a client application holding the user's public key certificate, and serves towards identity claim verification. As the extension mechanism in X.509 allows additional statements to be specified under the <code>Subject Alternative Name</code> (<abbr title="Subject Alternative Name">SAN</abbr>) field, it is used to declare the user's WebID for the <code>URI</code> field. When a client application running on the Web browser requests a resource from the server, the TLS connection gets established between them. Once TLS has been set up, the HTTP application protocol exchange takes place (eg. <code>GET</code>, <code>POST</code>). If the requested resource requires WebID authentication (see also <a href="#authorization">authorization</a> policies) the server can request the client to authenticate itself. When the Web browser encounters this certificate request, it may prompt its user to choose a certificate (from its certificate manager) - thereby signing a token with its private key - to let the client send it to the server. The verification agent extracts the public key as well as the WebID from the certificate. As the WebID enables a global dereferencing mechanism for finding a key, the server uses can decide on dereferencing the WebID Profile and verify the claims about the WebID. Once the identity verification is established, the server can look up its access control rules for the requested resource to determine if and how the request can be fulfilled.</p>

              <p>There are a number of different ways to create a self-signed certificate which includes our WebID under SAN. Here we discuss a process that uses the <cite><a href="https://www.openssl.org/">OpenSSL</a></cite> toolkit as outlined in: <cite><a href="https://www.w3.org/wiki/index.php?title=Foaf%2Bssl/HOWTO#How_to_create_a_certificate_which_includes_the_WebID_URI_for_multi-purpose_use">How to create a certificate which includes the WebID URI for multi-purpose use</a></cite>. We can create an RSA key that can be used to SSH to networks, include WebID URI and email information in the SAN to create an X.509 certificate which can be used to sign digitally sign emails, as well as to authenticate with from the Web browser. The <cite>Issuer Distinguished Name</cite> in X.509 (<code class="highlight-x509-issuer">Issuer</code> field) identifies the entity that signs the certificate, hence self-signing. The X.509 certificate and the private key can be bundled with the <cite><a href="https://tools.ietf.org/html/rfc7292">PKCS #12</a></cite> archive file format, and imported in Web browser's certificate manager. The certificate consists of information along the lines of:</p>

              <figure class="listing">
                <pre><code>Certificate:</code>
<code>    Data:</code>
<code>        Version: 3 (0x2)</code>
<code>    Signature Algorithm: sha1WithRSAEncryption</code>
<code>        <span class="highlight-x509-issuer">Issuer</span>: O = http://csarven.ca/, OU = http://csarven.ca/, CN = Sarven Capadisli, emailAddress = info@csarven.ca</code>
<code>        Validity</code>
<code>            Not Before: Dec  8 14:11:55 2012 GMT</code>
<code>            Not After : Nov 14 14:11:55 2112 GMT</code>
<code>        Subject: O = http://csarven.ca/, OU = http://csarven.ca/, CN = Sarven Capadisli, emailAddress = info@csarven.ca</code>
<code>        Subject Public Key Info:</code>
<code>            <span class="highlight-x509-public-key-algorithm">Public Key Algorithm</span>: <span class="highlight-x509-rsa-public-key">rsaEncryption</span></code>
<code>                <span class="highlight-x509-modulus">Modulus</span>:</code>
<code>                    00:ca:f6:a7:8d:16:e8:0f:93:03:37:45:3d:84:f7:</code>
<code>                    90:76:4c:56:ea:58:ac:be:da:5d:e3:d1:7b:6e:67:</code>
<code>                    35:69:ef:58:1b:89:6b:74:46:66:55:fb:3d:a2:f9:</code>
<code>                    a9:61:c6:d4:6d:99:e7:70:53:a0:aa:f8:3f:ac:4e:</code>
<code>                    ab:8b:91:98:f2:09:30:67:2d:e2:2c:b1:b2:2f:0a:</code>
<code>                    b8:5a:66:c9:5a:68:30:ea:a7:be:1e:28:ec:19:7f:</code>
<code>                    f7:a4:a4:48:24:3a:f2:f2:06:d2:be:45:8b:bc:71:</code>
<code>                    f3:2a:a0:73:31:5e:22:c9:b2:66:8f:e1:5c:73:2a:</code>
<code>                    33:ed:cf:d9:fa:39:d0:47:06:19:10:44:f3:3e:58:</code>
<code>                    0f:95:4e:6a:1d:9c:4b:f0:8c:82:0c:46:66:f5:ef:</code>
<code>                    85:54:cf:14:30:a3:3b:63:0c:80:d1:1f:7d:30:9c:</code>
<code>                    b6:41:b2:13:fc:bf:c9:a5:b6:99:af:62:5f:e2:36:</code>
<code>                    27:c4:03:ff:12:d7:95:14:17:87:28:53:7a:a1:73:</code>
<code>                    ab:a5:bc:5a:eb:87:56:9e:ba:1b:e3:27:4a:a5:3d:</code>
<code>                    9b:2f:8f:e7:2f:13:ba:81:25:e7:34:e8:e3:11:28:</code>
<code>                    30:3c:76:59:43:27:c4:c2:e4:31:e3:8f:2b:32:6c:</code>
<code>                    c2:44:08:0e:59:7a:4d:27:a9:8a:e3:fe:1e:db:5d:</code>
<code>                    e7:85</code>
<code>                <span class="highlight-x509-exponent">Exponent</span>: 65537 (0x10001)</code>
<code>        X509v3 extensions:</code>
<code>            X509v3 <span class="highlight-x509-san">Subject Alternative Name</span>:</code>
<code>                email:info@csarven.ca, <span class="highlight-x509-uri">URI</span>:<span class="highlight-webid">http://csarven.ca/#i</span></code></pre>
                <figcaption>Example certificate including a WebID in Subject Alternative Name.</figcaption>
              </figure>

              <p><cite><a href="https://www.w3.org/ns/auth/cert">The Cert Ontology 1.0</a></cite> can be used in WebID Profile documents to specify an agent's certificate information. For example, an agent can indicate their public and private keys. The fields and corresponding values of <code class="highlight-x509-public-key-algorithm">Public Key Algorithm</code>, <code class="highlight-x509-modulus">Modulus</code>, and <code class="highlight-x509-exponent">Exponent</code> in the X.509 certificate are used in the WebID Profile as part of <code class="highlight-x509-rsa-public-key">cert:RSAPublicKey</code>, <code>cert:exponent</code>, and <code>cert:modulus</code>. <code class="highlight-x509-uri">URI</code> under <span class="highlight-x509-san">SAN</span> is our <span class="highlight-webid">WebID</span>. An example where information about an RSA Public Key is associated with a WebID:</p>

              <figure class="listing">
                <pre><code>&lt;<span class="highlight-webid">http://csarven.ca/#i</span>&gt;</code>
<code>  cert:key &lt;http://csarven.ca/#cert&gt; .</code>
<code></code>
<code>&lt;http://csarven.ca/#cert&gt;</code>
<code>  a <span class="highlight-x509-rsa-public-key">cert:RSAPublicKey</span> ;</code>
<code>  <span class="highlight-x509-exponent">cert:exponent</span> "65537"^^xsd:nonNegativeInteger ;</code>
<code>  <span class="highlight-x509-modulus">cert:modulus</span> "caf6a78d16e80f930337453d84f790764c56ea58acbeda5de3d17b6e673569ef581b896b74466655fb3da2f9a961c6d46d99e77053a0aaf83fac4eab8b9198f20930672de22cb1b22f0ab85a66c95a6830eaa7be1e28ec197ff7a4a448243af2f206d2be458bbc71f32aa073315e22c9b2668fe15c732a33edcfd9fa39d04706191044f33e580f954e6a1d9c4bf08c820c4666f5ef8554cf1430a33b630c80d11f7d309cb641b213fcbfc9a5b699af625fe23627c403ff12d79514178728537aa173aba5bc5aeb87569eba1be3274aa53d9b2f8fe72f13ba8125e734e8e31128303c76594327c4c2e431e38f2b326cc244080e597a4d27a98ae3fe1edb5de785"^^xsd:hexBinary .</code></pre>
                <figcaption>RSA Public Key information associated with a WebID URI.</figcaption>
              </figure>

              <p id="webid-tls-delegation"><cite>WebID-TLS-Delegation</cite> is an an extension to WebID-TLS that enables users to delegate other agents to act on their behalf. In <cite><a href="http://ceur-ws.org/Vol-905/TrampEtAl_COLD2012.pdf">Extending the WebID Protocol with Access Delegation</a></cite>, Sebastian Tramp et al, states how a <q>principal</q> agent can delegate authentication and access to a trusted <q>secretary</q> agent - typically a third-party software - who can act <em>on behalf of</em> of the principal agent to perform (asynchronous) requests. A secretary with its own WebID acting on behalf of a user can potentially have the same (or required) privileges while still being distinguishable eg. via different public key, and capabilities. An agent can declare a delegation as follows:</p>

              <figure class="listing">
                <pre><code>&lt;<span class="highlight-webid">http://csarven.ca/#i</span>&gt;</code>
<code>  acl:delegates &lt;https://example.org/application#i&gt; .</code></pre>
                <figcaption>An agent delegating another agent to act on its behalf.</figcaption>
              </figure>

              <p>whereas the agent making requests on behalf of another agent would include the HTTP <code>On-Behalf-Of</code> header when making requests.</p>

              <p>The WebID-TLS workflow is based on open standards, broadly supported across platforms (covering servers, desktops, notebooks, phones, and other <abbr title="Internet of Things">IoT</abbr> devices), saves bandwidth, has low latency, and is simple to implement. Another attractive area for users using their own WebIDs along with self-signed certificates is that users can abstain from creating accounts for each Web application they use, as well as remember and manage usernames and passwords which are often vulnerable to phishing. A user sign-in process to authenticate themselves is as simple as "clicking" a button. Similarly, the certificate selection processed can be bypassed in that user can instruct its Web browser to select a certificate automatically if a server makes an authentication request. This sort of automatic authentication is not necessarily desirable for all interaction cases, simply because the user may wish to remain anonymous.</p>

              <p>On the other hand, there are important challenges with the WebID-TLS approach. First, creating certificates (including safely handling of private keys) in Operating Systems and/or Web browsers, and making them available to Web applications is not well-known to users and lack "simple" tooling. Second, the user experience around certificate management and selection in Web browsers as well as in different devices has a lot of room for improvement. Third, in order to minimise security risks, essentially tying identity to a certificate generally means that users are tied to the device on which their certificate was created - although it is possible to export and import certificates across devices, the steps in between are considered to be potentially weak points of the chain. One way to securely port the certificate with its private key is by encrypting the PKCS #12 archive with <a href="https://xkcd.com/936/">long and hard to guess</a> passphrases. In the event that the archive is stolen, there is at least a barrier which requires password cracking, and it may give sufficient time for the owner of the certificate to revoke it.</p>
            </div>
          </section>

          <section id="authorization" inlist="" rel="schema:hasPart" resource="#authorization">
            <h2 lang="en-us" property="schema:name" xml:lang="en-us">Authorization</h2>
            <div datatype="rdf:HTML" property="schema:description">
              <p class="fixme">Should this be a subsection of #standards-for-decentralised-web ? Kinda like it flat</p>

              <p><cite><a href="https://www.w3.org/ns/auth/acl">Access Control List</a></cite> (<abbr title="Access Control List">ACL</abbr>) ontology, enables a server to provide four modes of access: <q>Read</q>, <q>Write</q>, <q>Append</q>, and <q>Control</q>. As implied by the name, <em>read</em> allows a server's resources to be accessible and interpretable. <em>Write</em> allows resources to be modified or deleted. <em>Append</em> allows a specific kind of Write in that while adding of information is permitted, removal is not. <em>Control</em> permits full read and write access, which is typically given only to the owners (or administrators) of the resources.</p>

              <p>The following code snippets of authorization policies are used to specify the ACL information (eg. <samp>resource.acl</samp>) associated with a resource (eg. <samp>resource</samp>) on a server. For example, setting an authorization policy where an agent (only <code>http://csarven.ca/#i</code>) to be the owner of a resource:</p>

              <figure class="listing">
                <pre><code>&lt;#owner&gt;</code>
<code>  a acl:Authorization ;</code>
<code>  acl:agent &lt;http://csarven.ca/#i&gt; ;</code>
<code>  acl:accessTo &lt;./&gt; ;</code>
<code>  acl:mode acl:Control .</code></pre>
                <figcaption>An authorisation policy that assigns control access to an agent for a resource.</figcaption>
              </figure>

              <p>Setting a class of agents to perform read and append operations on a resource eg. an inbox:</p>

              <figure class="listing">
                <pre><code>&lt;#public&gt;</code>
<code>  a acl:Authorization ;</code>
<code>  acl:agentClass foaf:Agent ;</code>
<code>  acl:accessTo &lt;./&gt; ;</code>
<code>  acl:mode acl:Read , acl:Append .</code></pre>
                <figcaption>An authorisation policy that gives append access to a class of agents for a resource.</figcaption>
              </figure>
            </div>
          </section>



          <section id="persistence-and-preservation" inlist="" rel="schema:hasPart" resource="#persistence-and-preservation">
            <h2 property="schema:name">Persistence and Preservation</h2>
            <div datatype="rdf:HTML" property="schema:description">
              <p class="todo">Rough. I'm not sure if this should be a key subsection or moved elsewhere</p>

              <p>Author self-publishes.. trusted-third parties archive...</p>

              <p>Is it feasible to capture different states of articles, notifications, and annotations?</p>

              <ul>
                <li>a versioned article;</li>
                <li>publicly accessible annotations about the article;</li>
                <li>personal annotations</li>
              </ul>

              <p>Requirements.. Which formats and what's their quality?</p>

              <p>http://tracer.mementoweb.org/</p>


              <p>Tim Berners-Lee outlines two issues for the persistence of HTTP URIs:</p>

              <blockquote cite="https://www.w3.org/DesignIssues/PersistentDomains">
                <ol>
                  <li>The persistence of the opaque string which follows the domain name, and</li>
                  <li>the persistence of the domain name  itself.</li>
                </ol>
                <footer><cite><a href="https://www.w3.org/DesignIssues/PersistentDomains">Persistent Domains</a></cite>, 2000, Tim Berners-Lee</footer>
              </blockquote>


              <p>In a long enough timeline, .. more of a promise. URIs are not inherently persistent but persistable.</p>
              <p>Perseverance on Persistence ( https://www.slideshare.net/hvdsomp/perseverance-on-persistence/ ): "what it would take to be able to persistently, precisely, and seamlessly revisit the web of the past" - hvdsomp</p>
              <p>"Ultimately URI registration is a social agreement. URI owners declare a policy eg. implicit, written, verbal. If you announce a policy for your URIs eg. what happens in 1000 years, that says something about its intentions/reuse. Just as w3id, doi. Trust is built from there." - csarven</p>
              <p>Publish (make public) archiving and permanence policies.. degree of accountability</p>
              <p><abbr title="Persistent Identifier">PID</abbr>, DOI, w3id, PURL</p>

              <p>See also <cite><a href="http://www.ijdc.net/article/download/9.1.331/362/">Persistent Identifiers for Scholarly Assets and the Web: The Need for an Unambiguous Mapping</a></cite> (https://www.slideshare.net/hvdsomp/persistent-identifiers-and-the-web-the-need-for-an-unambiguous-mapping) , <cite><a href="http://journals.plos.org/plosbiology/article?id=10.1371/journal.pbio.2001414">Identifiers for the 21st century: How to design, provision, and reuse persistent identifiers to maximize utility and impact of life science data</a></cite> , <cite><a href="https://arxiv.org/pdf/1602.09102.pdf">Persistent URIs Must Be Used To Be Persistent</a></cite> (not using DOIs when even available) , <cite><a href="http://philarcher.org/diary/2013/uripersistence/">Study on Persistent URIs</a></cite> (explores best practices)</p>

              <p>As discussed earlier in the <cite><a href="scholarly-communication-on-the-web#registration-of-identifiers-with-social-contracts">registration of identifiers with social contracts</a></cite>, PURL, w3id.org, and DOI, for instance, can be relied on to extend the lifetime of accessibility of units of scholarly information.</p>


              <p>Content Integrity.. link rot / content drift</p>
              <p><cite><a href="http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0115253">Scholarly Context Not Found: One in Five Articles Suffers from Reference Rot</a></cite></p>


              <p id="robust-links"><cite><a href="http://robustlinks.mementoweb.org/spec/">Robust Links</a></cite>: are human and machine-actionable approaches to <q>decorate</q> links in hypertext documents so that the context of linked resources is preserved at the time of linking. Given that in a long enough time line, content-drift and link-rot pose challenges to maintain context and integrity between resources, associating the datetime information when linking helps to retain such context. The datetime information can be accompanied with a snapshot of the target URI made at a Web archive or a versioning system when linking, and using either the original or the versioned resource as the primary reference. Including datetime information in the source document can make it possible to interpret the context of each of the links in the document and to discover relevant snapshots. In the event that a linked resource or a snapshot becomes inaccessible, the datetime information helps to discover temporally close alternative snapshots.</p>
            </div>
          </section>


          <section id="implementing-a-read-write-linked-data-web" inlist="" rel="schema:hasPart" resource="#implementing-a-read-write-linked-data-web">
            <h2 property="schema:name">Implementing a Read-Write Linked Data Web</h2>
            <div datatype="rdf:HTML" property="schema:description">
              <p class="todo">This section is mostly a dump of dokie.li/docs.. need to revise/extend. What else should it focus on?</p>

<!--
XXX: 
              <p>In this section we describe a client-side application that reflects some of the <a href="scholarly-communication-on-the-web#inspecting-effects-and-artefacts">effects and artefacts of Web-centric scholarly communication</a> focusing on following areas:</p>

<pre>
** csarven.ca/dokieli-rww
*** outbox in WebID Profile ... discuss in connection to extension
*** memento, immutable.. internet archive features
** dokie.li/docs
</pre>
-->

              <p>In this section we describe dokieli's architecture which enables creators of information to:</p>

              <ul>
                <li>use their own WebIDs to identify themselves with, and have their profile information known to application</li>
                <li>self-publish and consume human and machine-interpretable Linked Data, and decide where they can be accessed from</li>
                <li>use a notification system to create awareness, facilitate discovery and reuse</li>
              </ul>


                      <pre id="html-document-inbox"><code>&lt;dl id="document-inbox"&gt;</code>
<code>  &lt;dt&gt;Notifications Inbox&lt;/dt&gt;</code>
<code>  &lt;dd&gt;&lt;a href="https://linkedresearch.org/inbox/csarven.ca/dokieli-rww/" rel="ldp:inbox">inbox/&lt;/a&gt;&lt;/dd&gt;</code>
<code>&lt;/dl&gt;</code></pre>

                      <p><code>ldp:inbox</code> relation gives an article its own Inbox where it can receive notifications about eg. annotations or activities relevant to an article. The notifications can be consumed by applications to offer additional content and interactive possibilities. dokieli can both send and consume notifications by way of discovering an article's inbox. Notifications are created for activities like announcements, creating, (dis)liking, and consumed in order to be displayed in context of available content. The protocol to send and consume notifications in dokieli uses <cite><a href="https://www.w3.org/TR/ldn/">Linked Data Notifications</a></cite>.</p>

                      <pre id="html-document-annotation-service"><code>&lt;dl id="document-annotation-service"&gt;</code>
<code>  &lt;dt&gt;Annotation Service&lt;/dt&gt;</code>
<code>  &lt;dd&gt;&lt;a href="https://linkedresearch.org/annotation/csarven.ca/dokieli-rww/" rel="oa:annotationService"&gt;annotation/&lt;/a&gt;&lt;/dd&gt;</code>
<code>&lt;/dl&gt;</code></pre>

                      <p>An article may refer to an annotation service (<code>oa:annotationService</code>) that conforms to the <cite><a href="https://www.w3.org/TR/annotation-protocol/">Web Annotation Protocol</a></cite>. See also <var>DO.C.AnnotationService</var> in <code>do.js</code>.</p>


              <section id="http-operations" inlist="" rel="schema:hasPart" resource="#http-operations">
                <h3 property="schema:name">HTTP operations</h3>
                <div datatype="rdf:HTML" property="schema:description">
                  <p>dokieli conforms to <cite><a href="https://www.w3.org/TR/ldp/" rel="cito:citesAsAuthority">Linked Data Platform</a></cite> (LDP) protocol for create, update, and delete operations.</p>

                  <p id="http-put">Article operations like <cite>New</cite>, <cite>Save</cite>, <cite>Save As</cite>,  <cite>Reply</cite> use <code>HTTP PUT</code>, <cite>Review</cite> and other annotation operations use <code>HTTP POST</code>.</p>

                  <p id="http-post">Notifications are sent with <code>HTTP POST</code>. <cite>Save</cite> and <cite>Save As</cite> normalises the HTML before sending.</p>

                  <table id="http-request-to-send">
                    <caption>Request to send</caption>
                    <thead>
                      <tr>
                        <th></th>
                        <th>HTTP method(s)</th>
                        <th><code>Content-Type</code></th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr><th>Article</th><td><code>PUT</code></td><td><code>text/html</code></td></tr>
                      <tr><th>Annotation</th><td><code>OPTIONS</code>, <code>POST</code></td><td><code>text/html</code>, <code>application/ld+json</code>, <code>text/turtle</code></td></tr>
                      <tr><th>Notification</th><td><code>OPTIONS</code>, <code>POST</code></td><td><code>text/html</code>, <code>application/ld+json</code>, <code>text/turtle</code></td></tr>
                    </tbody>
                    <tfoot>
                      <tr>
                        <td colspan="3">
                          <dl>
                            <dt id="request-to-send-article">Article</dt>
                            <dd>Articles typically use <code>text/html</code> with embedded RDFa. Where a server implements <code>GET</code> with <code>text/html</code>, and allows <code>PUT</code> for writing, the assumption is that it can allow <code>text/html</code>. In the future, dokieli can check for the <code>Accept-Put</code> header with <code>OPTIONS</code> to determine a suitable type. At this time, HTML+RDFa is an important default for articles.</dd>

                            <dt id="request-to-send-annotation">Annotation</dt>
                            <dd>Annotations use the <code>POST</code> method with <code>Content-Type</code> header value determined by type of location to write to: personal storage space eg. given a profile's <code>pim:storage</code>; made to an annotation service eg. an article's <code>oa:annotationService</code>; sent to profile's outbox's outbox: <code>as:outbox</code>. The <cite><a href="https://www.w3.org/TR/annotation-protocol/">Web Annotation Protocol</a></cite> requires <code>application/ld+json</code> by default. dokieli sends an <code>OPTIONS</code> request to check for the <code>Accept-Post</code> header and sends the payload in one of the serializations that the server prefers. If it is not set, it will fallback to <code>application/ld+json</code> as preferred by Wen Annotation and ActivityPub.</dd>

                            <dt id="request-to-send-notification">Notification</dt>
                            <dd>Notifications use <code>OPTIONS</code> to check the response's <code>Accept-Post</code> HTTP header. If it is set and matches one of the acceptable RDF mediatypes that dokieli can parse, it will use that mediatype to serialize the payload before <code>POST</code>ing. <span rel="schema:hasPart" resource="#dokieli-notification-post-content-type-json-ld">If it is not set, it will fallback to <code>application/ld+json</code> as required by the <cite><a href="https://www.w3.org/TR/ldn/#test-sender-header-post-content-type-json-ld" rel="cito:citesAsAuthority">Linked Data Notifications</a></cite> specification.</span></dd>
                          </dl>
                        </td>
                      </tr>
                    </tfoot>
                  </table>

                  <aside id="http-patch">
                    <p>Current reasons for using <code>HTTP POST</code> and <code>PUT</code> instead of <code>PATCH</code>:</p>

                    <ul>
                      <li>Servers with <cite><a href="https://tools.ietf.org/html/rfc5261" rel="cito:citesAsAuthority">XML Patch</a></cite> and mediatype <code>application/xml-patch+xml</code> (<cite><a href="https://tools.ietf.org/html/rfc7351" rel="cito:citesAsAuthority">RFC 7351</a></cite>) capability in the Linked Data ecosystem are not well supported.</li>

                      <li><code>HTTP PATCH</code> with <cite><a href="https://www.w3.org/TR/sparql11-update/" rel="cito:citesAsAuthority">SPARQL Update</a></cite> (using mediatype <code>application/sparql-update</code>) would not work for RDFa representations because it would require additional server-side knowledge: HTML+RDFa serializer. This also makes server implementations a dependency for dokieli which is an undesirable design pattern.</li>

                      <li><code>HTTP PATCH</code> can help to optimise HTTP requests provided that the server processes the SPARQL query and eventually publishes the final state of the article. dokieli's use of <code>HTTP POST</code> and <code>HTTP PUT</code> on the other hand does not expect or impose operations other than to store and serve the article. If servers would like to do versioning and how, dokieli leaves it to the servers to decide.</li>
                    </ul>
                  </aside>

                  <p id="http-proxy">Due to <cite><a href="https://www.w3.org/TR/mixed-content/">Mixed Content</a></cite> implementations in Web browsers, ie. <q>fetching of content over unencrypted or unauthenticated connections in the context of an encrypted and authenticated document</q>, is subject to being blocked by the Web browser. Hence, an https document (eg article at https) will not be able to use the contents of an http document (eg. an http WebID). As a workaround, dokieli uses a proxy endpoint by default in order to use the contents of an http resource. An https document fetching an https resource will not use the proxy.</p>
                </div>
              </section>

              <section id="authentication-dokieli" inlist="" rel="schema:hasPart" resource="#authentication">
                <h3 property="schema:name">Authentication</h3>
                <div datatype="rdf:HTML" property="schema:description">
                  <p>dokieli was originally intended to handle different authentication mechanisms. <a href="https://www.w3.org/2005/Incubator/webid/spec/tls/">WebID-TLS</a> is currently supported to authenticate with servers.</p>
                </div>
              </section>

              <section id="storage-dokieli" inlist="" rel="schema:hasPart" resource="#storage">
                <h3 property="schema:name">Storage</h3>
                <div datatype="rdf:HTML" property="schema:description">
                  <dl>
                    <dt id="personal-storage">Personal storage</dt>
                    <dd>WebID's with <code>pim:storage</code> can get to use their personal online data storage with dokieli's read-write operations, eg all annotations, <cite>Reply</cite>, <cite>Review</cite>, <cite>New</cite>, <cite>Save As</cite>.</dd>

                    <dt id="local-storage">Local storage</dt>
                    <dd>There is a <cite>Local Storage</cite> feature which uses user-agent's <var>window.localStorage</var>, with default 1m autosave.</dd>
                  </dl>
                </div>
              </section>

              <section id="web-extension-dokieli" inlist="" rel="schema:hasPart" resource="#web-extension">
                <h3 property="schema:name">Web Extension</h3>
                <div datatype="rdf:HTML" property="schema:description">
                  <p>The dokieli <cite><a href="https://developer.mozilla.org/en-US/Add-ons/WebExtensions">Web Extension</a></cite> is a minimal package of dokieli which contains the core CSS and JavaScript that works as a browser add-on. When user triggers it from their browser toolbar, it provides the same functionality as a <cite>single-page application</cite>, ie. initialised and rendered in the browser DOM.</p>

                  <p>Currently the extension works with Firefox and Chrome/Chromium browsers. Two ways to do this:</p>

                  <ol>
                    <li>Extensions are available from <cite><a href="https://addons.mozilla.org/en-US/firefox/addon/dokieli/">Add-ons for Firefox</a></cite> and <cite><a href="https://chrome.google.com/webstore/detail/ddmhaonbhodhgkaljpjlglodncddalid">Chrome Web Store</a></cite>.</li>

                    <li>Clone <a href="https://github.com/linkeddata/dokieli">https://github.com/linkeddata/dokieli</a> and import directory:
                      <ul>
                        <li>Firefox: <q>Load Temporary Add-on</q> from Add-ons (or go to <code>about:debugging</code> from addressbar) and import by selecting a file from the directory (eg manifest.json). See also <a href="https://developer.mozilla.org/en-US/Add-ons/WebExtensions/Temporary_Installation_in_Firefox">temporary add-on installation</a>.</li>
                        <li>Chrome/Chromium: Check the <q>developer more</q> option, under <cite>Extensions</cite> (or go to <code>chrome://extensions/</code> from addressbar) and import the directory.</li>
                      </ul>
                    </li>
                  </ol>
                </div>
              </section>


              <section id="adoption-of-dokieli" inlist="" rel="schema:hasPart" resource="#adoption-of-dokieli">
                <h3 property="schema:name">Adoption of dokieli</h3>
                <div datatype="rdf:HTML" property="schema:description">
                  <p id="adoption-w3c-use">The W3C Working Group Note <cite><a href="https://www.w3.org/TR/annotation-html/" rel="cito:citesAsAuthority">Embedding Web Annotations in HTML</a></cite> includes examples from dokieliâ€™s use of the Web Annotation data <cite><a href="https://www.w3.org/TR/annotation-model/" rel="cito:citesAsAuthority">Model</a></cite> and <cite><a href="https://www.w3.org/TR/annotation-vocab/" rel="cito:citesAsAuthority">Vocabulary</a></cite> with motivations for example for <q>Lightweight, decentralised Annotation Tools</q>. The W3C <cite><a href="https://www.w3.org/TR/ldn/" rel="cito:citesAsAuthority">Linked Data Notifications</a></cite> specification uses dokieliâ€™s HTML+RDFa template, and the <a href="https://linkedresearch.org/ldn/" rel="cito:citesAsAuthority">Editorâ€™s Draft</a> showcase dokieli as a consumer of LDN and Web Annotations. The LDN <a href="https://linkedresearch.org/ldn/tests/" rel="cito:citesAsAuthority">test suite</a> also uses dokieliâ€™s templates and stylesheets.</p>

                  <p id="adoption-academic">The academic workshop <cite><a href="http://semstats.org/">SemStats</a></cite> series use dokieli in its Website templates, including the call for contributions. <cite><a href="http://ceur-ws.org/">CEUR-WS.org</a></cite>, an <q>Online Proceedings for Scientific Conferences and Workshops</q> offers the tooling <cite><a href="https://github.com/ceurws/ceur-make">ceur-make</a></cite> to help organisers generate proceedings using dokieliâ€™s HTML+RDFa template, e.g., <cite><a href="http://ceur-ws.org/Vol-1654/">SemStats 2016</a></cite>. We list a community (of academics) who self-publish their articles and thesis using dokieli with different stylesheets and derived scripts under its <cite><a href="https://github.com/linkeddata/dokieli/wiki#examples-in-the-wild">examples in the wild</a></cite>. The conference series: WWW (e.g., <a href="http://events.linkeddata.org/ldow2018/">LDOW</a> and <a href="http://sociam.org/wow2017/">WOW</a> workshops), <a href="https://iswc2018.semanticweb.org/calls/html-submission-guide/">ISWC</a>, and <a href="http://2018.eswc-conferences.org/call-papers">ESWC</a> propose dokieli as one tooling in which authors can use to make their contributions to the calls with.</p>

                  <p id="adoption-misc">The <cite><a href="https://linkedresearch.org/">Linked Research</a></cite> website uses dokieli in its templates on the site as well as workshop proposals and call for contributions. <a href="http://csarven.ca/">csarven.ca</a> uses dokieli in full, where some articles (like this article) offer pointers to a public annotation service in which users may wish to use for their annotations. Articles also dynamically embed annotations from personal storage spaces.</p>
                </div>
              </section>
            </div>
          </section>



          <section id="linked-specifications-reports" rel="schema:hasPart" resource="#linked-specifications-reports">
            <h2 property="schema:name">Linked Specifications, Test Suites, and Implementation Reports</h2>
            <div datatype="rdf:HTML" property="schema:description">
              <p class="fixme">I'm not sure what to do with this exactly...</p>

              <p class="todo">The relevance of this section/work is about independent publishing (different jurisdictions) but following same line of Web standards / interop... pay-as-you-go... the sum is greater</p>

              <p>This article describes the semantic structure and linking of the W3C Recommendation <cite><a href="https://www.w3.org/TR/ldn/">Linked Data Notifications</a></cite> (LDN), its test suite, and implementation reports.</p>

              <p>Semantically interlinking and detailed machine-readability of components related to Web standards and their implementations is novel, and can be useful for coherently documenting software projects and their conformance with specifications. Everything presented here is open source and reusable by other specifications (W3C standards or not), test suites, and implementations.</p>

              <p>As a concrete example of the benefits of this approach, the LDN test suite is itself an LDN implementation for the purpose of automating the collection and aggregation of implementation reports which were used directly towards the formal standardisation process.</p>
            </div>
          </section>


          <section id="the-effects-and-artefacts-of-autonomous-engagement" rel="schema:hasPart" resource="#the-effects-and-artefacts-of-autonomous-engagement">
            <h2 property="schema:name">The Effects and Artefacts of Autonomous Engagement</h2>
            <div datatype="rdf:HTML" property="schema:description">
              <p>The Webâ€™s design stands out because of its absence of centralised control, both for technical reasons of scalability and resilience as well as a societal need for freedom of expression. A challenge in such large-scale decentralised networks is how related publications can be semantically interlinked, even if they are authored and published by different parties. Centralising their publications is practiced by the majority of authoring networks today, demanding authors to give up some or all of their control in exchange for technical simplicity.</p>

              <p>dokieli shows it is possible to build a social machine wherein people interact with each other without the need of centralised coordination. Users can choose storage space for their content independently of the applications with which they edit and view that content. Documents are connected statically through links and dynamically through Linked Data Notifications. This is a proof for the viability of a decentralised authoring and annotation environment built with Web standards.</p>

              <p>On the other hand, dokieliâ€™s use of standards shows that dokieli itself is only one means to an end: once the document has been created, it lives on independently. The social machine consists of people and documents, connected by Web standards, with dokieli acting as just one possible catalyst. Different Web applications can incorporate any of dokieliâ€™s functions and implement the principles to varying extents. Since the data is loosely coupled to the application, we avoid the <em>walled garden</em> problem of many current social platforms today.</p>

              <p>A couple of important socio-technical challenges remain. Resources might want to indicate in a granular way which actions they support or encourage, such as liking, bookmarking, or sharing, and perhaps conditions about which notifications should be sent when any of these events take place. In order to encourage positive behaviour, we might want ways to provide moderation, and solutions to prevent harassment and abuse. Closely related is the issue of identity, pseudonymity and anonymity, and its relation with trust and verification. While there is likely no final solution to these issues in an open ecosystem, it is worthwhile exploring within dokieli or other tools based on similar design principles.</p>

              <p>Future work can examine how additional features can be realised on top of existing Web standards, or where more development is required. Real-time collaborative editing is often realised with centralised communication (even though some peer to peer alternatives exist). Services like top-down annotations or automated entity marking can improve the discoverability of a publication, yet the question of how to offer these without being tied to certain servers needs to be still solved.</p>

              <hr />

              <p>The future of self-registration of scholarly units depends in large part on how well its practitioners, advocates, educators alike, are able to reconcile the ideals that the medium offers with the realities of the commercial third-party systems within which scholarly communication operates and the homogenizing influences of scholarly socialisation.</p>

              <p>While these challenges are technically surmountable, they need to be taken seriously if, the extreme case where "anyone can say anything about anything" is subject to be treated on equal grounds as a piece of information that is well certified. One contemporary and popular example of this scenario is where nearly all scientists being in agreement on the presence of global warming, climate change, and its consequences. In order to honour a commitment to public service, scientific communication - independent to self-registration - must remain grounded on reproducible and/or replicable facts and explanations, attributable and accountable participants. After all, the output affects journalism, further scientific knowledge exchange, policy making, as well public opinion and perception.</p>

              <p class="todo">Add notes from fragile science</p>
            </div>
          </section>

        </div>
      </article>
    </main>
  </body>
</html>
